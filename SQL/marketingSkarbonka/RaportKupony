DECLARE v_arrString ARRAY<STRING>;

CREATE TEMP FUNCTION fun(arg STRING)
RETURNS ARRAY<STRING>
LANGUAGE js AS 
  r'''
let a=arg;
let slowo='';
let iter=0;
let tablica=[];
while (a.length-1>iter){
    while(a[iter]!=','&& iter<=a.length-1){
        if(slowo.length==0 && a[iter]==0)
            {iter++;
            continue;
            }
        slowo+=a[iter]
        iter++;
    }
    tablica.push(slowo);
    iter++;
    slowo='';
}
return tablica;
  ''';
   
CREATE OR REPLACE TABLE `pol-it-digiteam-2022062900.PJAB.raport_kupony_tabela_ogolna_step4` as

-- Łączenie danych z trzech tabel do jednej tabeli wynikowej
SELECT
  t2.data_uzycia,
  t3.identyfikator_typu_kuponu,
  t1.nazwa_typu_kuponu,
  t1.id_rulki,
  t1.nazwa_rulki,
  t1.data_utworzenia_rulki,
  t1.data_startu_rulki,
  t1.data_konca_rulki,
  t3.liczba_kuponow,
  t2.ilosc_uzyc,
  t2.ilosc_poprawnych_uzyc,
  t3.przykladowy_id_kuponu
FROM
  `pol-it-digiteam-2022062900.PJAB.raport_kupony_tabela_ogolna_step1` t1
LEFT JOIN
  `pol-it-digiteam-2022062900.PJAB.raport_kupony_tabela_ogolna_step2` t2
  ON t1.nazwa_typu_kuponu = t2.nazwa_typu_kuponu
LEFT JOIN
  `pol-it-digiteam-2022062900.PJAB.raport_kupony_tabela_ogolna_step3` t3
  ON t1.nazwa_typu_kuponu = t3.nazwa_typu_kuponu
  ;

  CREATE OR REPLACE TABLE `pol-it-digiteam-2022062900.PJAB.raport_kupony_tabela_ogolna_step5` as
with discount as (
 Select 
 trn.id as id,
  date(trn.date) as dat,
  trr.srcTrlCode as rulka,
  sum(discount)/100 as discount
from 
  `auchan-pol-prod.raw_comarch.trans_trr` trr
join 
  `auchan-pol-prod.raw_comarch.trans_trn` trn 
on
   trr.trnId=trn.id
-- where 
--    date(trn.date)='2025-06-23'
group by 1,2,3

),
groupDisc as (
   Select 
  date(trn.date) as dat,
  trr.srcTrlCode as rulka,
  sum(discount)/100 as discount
from 
  `auchan-pol-prod.raw_comarch.trans_trr` trr
join 
  `auchan-pol-prod.raw_comarch.trans_trn` trn 
on
   trr.trnId=trn.id
-- where 
--    date(trn.date)='2025-06-23'
group by 1,2
)
,cashback as (
select 
distinct 
date(trn.date) as dat,
srcTrlCode as rulka,
-- pointsText,
sum(cast(regexp_extract(pointsText,r'[0-9]+') as int64)/100) as cshb
from 
  `auchan-pol-prod.raw_comarch.trans_trr` trr
join 
  `auchan-pol-prod.raw_comarch.trans_trn` trn 
on
   trr.trnId=trn.id
where 
--    date(trn.date)='2025-06-23'
pointsText like '%AUCH_PT%'
group by 1,2
)

,paragony as ( 
  select
   trnId,
   prdId,
   quantity,
   value,
   prdCode 
  from `auchan-pol-prod.raw_comarch.trans_tpd`
),
art as (
   select
    ART_NUMER as nr,
    ART_NAZWA as nazwa,
    met.EAN_CD as ean
  from
    `pol-it-analytics-2019120200.POL_BD_MARZA.v_dic_artykul_nomenklatura` am
    join `pol-it-wh-prod-2019120200.POL_WH_METI_CENTRAL.raw_mgean` met on cast (met.EAN_CD as string) = am.EAN 
)
,prod as ( --rozbicie rulki na produkty
  SELECT
--  value,
--  p2.name,
 p2.offerId,
  p2.value as rulka,
  p1.value,
 fun(p1.value) as tab

FROM `auchan-pol-prod.raw_comarch.promo_param` p1
INNER JOIN  `auchan-pol-prod.raw_comarch.promo_param` p2
on p1.offerId=p2.offerId
where p1.name='AFFECT_CODE'
and p2.name='COUPON_TYPE'
)
,zakupProd as --marza
(SELECT 
TAR_NOART as art,
TAR_DTTR,
round(avg(TAR_PXBEU),2) as cenaZakupy 
FROM `auchan-pol-prod.raw_meti_store.MGTAR` mg 
WHERE TAR_DTTR = (select max(TAR_DTTR) from `auchan-pol-prod.raw_meti_store.MGTAR` mg2 where mg.TAR_NOART=mg2.TAR_NOART)
group by 1,2
)





-- select * from prod p join discount d on p.rulka=d.rulka
,rulkaObrotMarza as (
select 
pp.trnId,
p2.dat,
p1.rulka,
-- tab,
prod2,
quantity,
pp.value/100 as obrot,
zP.cenaZakupy,
round(((pp.value/100-(zP.cenaZakupy*quantity))),2) as marza
-- p2.discount
from prod p1
join discount p2
on p1.rulka=p2.rulka
join paragony pp 
on pp.trnId=p2.id
join unnest(tab) AS prod2
join art a on cast(a.nr as string)=cast (prod2 as string)
join zakupProd zP on cast(zP.art as string)=prod2
where cast(a.ean as string)=pp.prdCode
-- join 
-- `auchan-pol-prod.raw_comarch.promo_param` par

)
,agrRulka as 
(
  select 
  rulka,
  dat,
  sum(obrot) as obrot,
  sum(marza) as marza
  from rulkaObrotMarza
  group by 1,2
)
-- select * from zakupy 




-- Łączenie danych z trzech tabel do jednej tabeli wynikowej
SELECT
distinct 
  t2.data_uzycia-1 as dataUzycia,
  t3.identyfikator_typu_kuponu,
  t1.nazwa_typu_kuponu,
  t1.id_rulki,
  t1.nazwa_rulki,
  t1.data_utworzenia_rulki,
  t1.data_startu_rulki,
  t1.data_konca_rulki,
  t3.liczba_kuponow,
  t2.ilosc_uzyc,
  t2.ilosc_poprawnych_uzyc,
  t3.przykladowy_id_kuponu,
  d.discount as discount,
 c.cshb as cash,
 ag.obrot,
 ag.marza
FROM 
  `pol-it-digiteam-2022062900.PJAB.raport_kupony_tabela_ogolna_step1` t1
LEFT JOIN
  `pol-it-digiteam-2022062900.PJAB.raport_kupony_tabela_ogolna_step2` t2
  ON t1.nazwa_typu_kuponu = t2.nazwa_typu_kuponu
LEFT JOIN
  `pol-it-digiteam-2022062900.PJAB.raport_kupony_tabela_ogolna_step3` t3
  ON t1.nazwa_typu_kuponu = t3.nazwa_typu_kuponu
  left join 
    groupDisc d on d.rulka=t1.nazwa_rulki and d.dat=t2.data_uzycia-1
    left join cashback c on c.rulka=t3.nazwa_typu_kuponu and c.dat=t2.data_uzycia-1
  left join agrRulka ag on ag.rulka=d.rulka and ag.dat=t2.data_uzycia-1
order by 1 desc
  




